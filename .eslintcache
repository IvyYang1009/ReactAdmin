[{"F:\\React\\admin-client\\src\\App.js":"1","F:\\React\\admin-client\\src\\index.js":"2","F:\\React\\admin-client\\src\\pages\\Login\\login.jsx":"3","F:\\React\\admin-client\\src\\pages\\Admin\\admin.jsx":"4","F:\\React\\admin-client\\src\\api\\ajax.js":"5","F:\\React\\admin-client\\src\\api\\index.js":"6","F:\\React\\admin-client\\src\\utils\\memoryUtils.js":"7","F:\\React\\admin-client\\src\\utils\\storageUtils.js":"8","F:\\React\\admin-client\\src\\components\\Header\\index.jsx":"9","F:\\React\\admin-client\\src\\components\\LeftNav\\index.jsx":"10","F:\\React\\admin-client\\src\\pages\\Category\\category.jsx":"11","F:\\React\\admin-client\\src\\config\\menuConfig.js":"12","F:\\React\\admin-client\\src\\pages\\Home\\home.jsx":"13","F:\\React\\admin-client\\src\\pages\\Charts\\bar.jsx":"14","F:\\React\\admin-client\\src\\components\\link-button\\index.jsx":"15","F:\\React\\admin-client\\src\\pages\\Category\\add-form.jsx":"16","F:\\React\\admin-client\\src\\pages\\Category\\update-form.jsx":"17","F:\\React\\admin-client\\src\\pages\\Product\\home.jsx":"18","F:\\React\\admin-client\\src\\pages\\Product\\add-update.jsx":"19","F:\\React\\admin-client\\src\\pages\\Product\\product.jsx":"20","F:\\React\\admin-client\\src\\pages\\Product\\detail.jsx":"21","F:\\React\\admin-client\\src\\utils\\constant.js":"22","F:\\React\\admin-client\\src\\pages\\Charts\\line.jsx":"23","F:\\React\\admin-client\\src\\pages\\User\\user.jsx":"24","F:\\React\\admin-client\\src\\pages\\Product\\pictures-wall.jsx":"25","F:\\React\\admin-client\\src\\pages\\Charts\\pie.jsx":"26","F:\\React\\admin-client\\src\\pages\\Product\\rich-text-editor.jsx":"27","F:\\React\\admin-client\\src\\pages\\Role\\role.jsx":"28","F:\\React\\admin-client\\src\\pages\\Role\\add-form.jsx":"29","F:\\React\\admin-client\\src\\pages\\Role\\auth-form.jsx":"30","F:\\React\\admin-client\\src\\utils\\dateUtils.js":"31","F:\\React\\admin-client\\src\\pages\\User\\user-form.jsx":"32"},{"size":538,"mtime":1611243801662,"results":"33","hashOfConfig":"34"},{"size":373,"mtime":1611388809910,"results":"35","hashOfConfig":"34"},{"size":5429,"mtime":1611569391735,"results":"36","hashOfConfig":"34"},{"size":2207,"mtime":1611816009760,"results":"37","hashOfConfig":"34"},{"size":779,"mtime":1611328558849,"results":"38","hashOfConfig":"34"},{"size":2566,"mtime":1612148081209,"results":"39","hashOfConfig":"34"},{"size":33,"mtime":1611329212355,"results":"40","hashOfConfig":"34"},{"size":567,"mtime":1611412167635,"results":"41","hashOfConfig":"34"},{"size":2283,"mtime":1611827328885,"results":"42","hashOfConfig":"34"},{"size":5813,"mtime":1612164383723,"results":"43","hashOfConfig":"34"},{"size":6192,"mtime":1611629014701,"results":"44","hashOfConfig":"34"},{"size":1730,"mtime":1612163539197,"results":"45","hashOfConfig":"34"},{"size":260,"mtime":1611498730462,"results":"46","hashOfConfig":"34"},{"size":231,"mtime":1611416045009,"results":"47","hashOfConfig":"34"},{"size":180,"mtime":1611493520695,"results":"48","hashOfConfig":"34"},{"size":763,"mtime":1611547945746,"results":"49","hashOfConfig":"34"},{"size":935,"mtime":1611903788901,"results":"50","hashOfConfig":"34"},{"size":5522,"mtime":1612165636761,"results":"51","hashOfConfig":"34"},{"size":8562,"mtime":1611901031639,"results":"52","hashOfConfig":"34"},{"size":729,"mtime":1611641339167,"results":"53","hashOfConfig":"34"},{"size":4079,"mtime":1611649551104,"results":"54","hashOfConfig":"34"},{"size":151,"mtime":1611804853445,"results":"55","hashOfConfig":"34"},{"size":233,"mtime":1611416037161,"results":"56","hashOfConfig":"34"},{"size":5260,"mtime":1612159421110,"results":"57","hashOfConfig":"34"},{"size":3511,"mtime":1611805898143,"results":"58","hashOfConfig":"34"},{"size":231,"mtime":1611415936397,"results":"59","hashOfConfig":"34"},{"size":3650,"mtime":1611900998046,"results":"60","hashOfConfig":"34"},{"size":6192,"mtime":1612165442757,"results":"61","hashOfConfig":"34"},{"size":919,"mtime":1612027528808,"results":"62","hashOfConfig":"34"},{"size":2926,"mtime":1612029840481,"results":"63","hashOfConfig":"34"},{"size":289,"mtime":1612029565850,"results":"64","hashOfConfig":"34"},{"size":2005,"mtime":1612160072827,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1mk3glh",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"81"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"81"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"71"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\React\\admin-client\\src\\App.js",[],["145","146"],"F:\\React\\admin-client\\src\\index.js",[],["147","148"],"F:\\React\\admin-client\\src\\pages\\Login\\login.jsx",["149"],"import React, { Component } from 'react'\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { Redirect } from 'react-router-dom'\r\nimport './login.less'\r\nimport logo from '../../assets/images/logo.png'\r\nimport { reqLogin } from '../../api';\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport storageUtils from '../../utils/storageUtils'\r\n\r\n/**\r\n * 登录的路由组件\r\n */\r\n export default class Login extends Component {\r\n       \r\n    formRef = React.createRef();\r\n     //对密码进行验证\r\n        validatePwd = (rule,value) => {\r\n            if(!value) {\r\n                return Promise.reject('密码必须输入')\r\n            } else if(value.length > 12) {\r\n                return Promise.reject('密码必须小于12位')\r\n            } else if(value.length < 4) {\r\n                return Promise.reject('密码必须大于4位')\r\n            } else if(!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n                return Promise.reject('密码必须是英文、数字、或下划线组成')\r\n            }\r\n            return Promise.resolve();\r\n        }\r\n        // (nameList?: NamePath[]) => Promise\r\n        onFinish = (value) => {\r\n            // console.log( this.formRef.current.getFieldsValue())\r\n            this.formRef.current.validateFields().then(async values=> {\r\n                const {username, password} = values\r\n                const result = await reqLogin(username, password)\r\n                // console.log('请求成功', reponse.data)\r\n                // const result = reponse\r\n                console.log(result)\r\n                if(result.status === 0) {\r\n                    const user = result.data\r\n                    memoryUtils.user = user\r\n                    storageUtils.saveUser(user) //保存到local中\r\n                    message.success('登录成功')\r\n                    this.props.history.replace('/')\r\n                } else { \r\n                    message.error(result.msg)\r\n                }\r\n            })\r\n                \r\n        }\r\n       \r\n        render() {\r\n            //判断用户是否登录，自动跳转到管理界面\r\n            const user = memoryUtils.user\r\n            if(!user && !user._id) {\r\n                return <Redirect to='/'></Redirect>\r\n            }\r\n            return (\r\n                <div className=\"login\">\r\n                    <header className=\"login-header\">\r\n                        <img src={logo} alt=\"logo\" />\r\n                        <h1>后台管理系统</h1>\r\n                    </header>\r\n                    <section className=\"login-content\">\r\n                        <h2>用户登录</h2>\r\n                        <Form\r\n                            name=\"normal_login\"\r\n                            className=\"login-form\"\r\n                            onFinish={this.onFinish}\r\n                            ref={this.formRef}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"username\"\r\n                                //声明式验证\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: '请输入用户名!',\r\n                                    },\r\n                                    // {\r\n                                    //     min: 4,\r\n                                    //     message: 'Username must be no less than 4 characters ',\r\n                                    // },\r\n                                    // {\r\n                                    //     max: 12,\r\n                                    //     message: 'Username must not exceed 12 characters ',\r\n                                    // },\r\n                                    {\r\n                                        pattern: /^[a-zA-Z0-9_]{4,12}$/,\r\n                                        message: '用户名必须是4-12字母数字下划线',\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"password\"\r\n                                rules={[\r\n                                    {\r\n                                        validator: this.validatePwd\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input\r\n                                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                    Log in\r\n                                </Button>\r\n                                Or <a href=\"\">register now!</a>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </section>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n  ",["150","151"],"F:\\React\\admin-client\\src\\pages\\Admin\\admin.jsx",[],["152","153"],"F:\\React\\admin-client\\src\\api\\ajax.js",[],["154","155"],"F:\\React\\admin-client\\src\\api\\index.js",[],"F:\\React\\admin-client\\src\\utils\\memoryUtils.js",["156"],"export default {\r\n    user: {}\r\n}","F:\\React\\admin-client\\src\\utils\\storageUtils.js",["157"],"import store from 'store'\r\n\r\nconst USER_KEY = 'user_key'\r\nexport default {\r\n/**\r\n * 保存user的方法\r\n * \r\n */\r\n    saveUser (user) {\r\n        // localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n        store.set(USER_KEY,user)\r\n    },\r\n    \r\n/**\r\n * 读取user的方法\r\n */\r\n    getUser () {\r\n        // return JSON.parse(localStorage.getItem(USER_KEY) || '{}') \r\n        return store.get(USER_KEY) || {}\r\n    },\r\n/**\r\n * 删除user的方法\r\n */\r\n    removeUser () {\r\n        // localStorage.removeItem(USER_KEY)\r\n        store.remove(USER_KEY)\r\n    }\r\n}\r\n",["158","159"],"F:\\React\\admin-client\\src\\components\\Header\\index.jsx",[],"F:\\React\\admin-client\\src\\components\\LeftNav\\index.jsx",[],"F:\\React\\admin-client\\src\\pages\\Category\\category.jsx",["160"],"import React, { Component } from 'react'\r\nimport {\r\n    Card,\r\n    Table,\r\n    Button,\r\n    message,\r\n    Breadcrumb,\r\n    Modal\r\n} from 'antd'\r\nimport { PlusOutlined} from '@ant-design/icons';\r\nimport LinkButton from '../../components/link-button'\r\nimport { reqCategorys, reqAddCategory, reqUpdateCategory } from '../../api'\r\nimport AddForm from './add-form'\r\nimport UpdateForm from './update-form'\r\n/**\r\n * 商品分类路由\r\n */\r\n\r\nexport default class Category extends Component {\r\n    \r\n    state = {\r\n\r\n        loading: false,\r\n        categorys: [], //一级分类列表\r\n        subCategorys: [], //二级分类列表\r\n        parentId: '0', // 当前需要显示的分类列表ID\r\n        parentName: '',\r\n        isAddModalVisible: false,\r\n        iUpdateModalVisible: false\r\n    }\r\n    /**\r\n     * 获取一级分类列表和二级分类列表\r\n     */\r\n    getCategorys = async () => {\r\n        this.setState({ loading: true })\r\n        const { parentId } = this.state\r\n        const result = await reqCategorys(parentId)\r\n        this.setState({ loading: false })\r\n\r\n        if (result.status === 0) {\r\n            //取出分类的数组(可能是一级也有可能是二级)\r\n            const categorys = result.data\r\n            if (parentId === '0') {\r\n                //更新状态\r\n                this.setState({\r\n                    categorys: categorys\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    subCategorys: categorys\r\n                })\r\n            }\r\n\r\n        } else {\r\n            message.error('失败')\r\n        }\r\n    }\r\n    /**\r\n     * 发送异步ajax请求\r\n     */\r\n    componentDidMount() {\r\n        //获取一级分类列表显示\r\n        this.getCategorys()\r\n    }\r\n    /**\r\n     * \r\n     * 获取二级列表\r\n     */\r\n    showSubCategorys = (category) => {\r\n        this.setState({\r\n            parentId: category._id,\r\n            parentName: category.name\r\n        }, () => { //重新render()后执行\r\n            console.log(this.state.parentId)\r\n            this.getCategorys()\r\n        })\r\n       \r\n    }\r\n    /**\r\n     * 显示一级分类列表\r\n     */\r\n    showCategorys = () => {\r\n        this.setState({\r\n            parentId: '0',\r\n            parentName: '',\r\n            subCategorys: []\r\n        })\r\n    }\r\n    /**\r\n     * 点击取消\r\n     */\r\n    handleCancel = () => {\r\n        //清除输入数据\r\n        this.form.resetFields()\r\n        console.log(this.form.getFieldsValue())\r\n        //隐藏form\r\n        this.setState({\r\n            isAddModalVisible: false,\r\n            isUpdateModalVisible: false\r\n        })\r\n    }\r\n    /**\r\n     * 显示添加对话框\r\n     */\r\n    showAdd = () => {\r\n        this.setState({\r\n            isAddModalVisible: true\r\n        })\r\n    }\r\n    /**\r\n     * 显示更新提示框\r\n     */\r\n    showUpdate = (category) => {\r\n        //保存状态\r\n        this.category = category\r\n        this.setState({\r\n            isUpdateModalVisible: true\r\n        })\r\n         \r\n    }\r\n    /**\r\n     * 添加\r\n     */\r\n    addCategory = () => {\r\n        this.setState({\r\n            isAddModalVisible: true\r\n        })\r\n    }\r\n    /**\r\n     * 更新\r\n     */\r\n    updateCategory = async () => {\r\n        //隐藏提示框\r\n        this.setState({\r\n            isUpdateModalVisible: false\r\n        })\r\n        const categoryId = this.category._id\r\n        const categoryName = this.form.getFieldValue('categoryName')\r\n        //清除输入数据\r\n        this.form.resetFields()\r\n        //发送请求更新\r\n        const result = await reqUpdateCategory({categoryId,categoryName})\r\n        if(result.status === 0) {\r\n            //刷新显示更改后的信息\r\n            this.getCategorys()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //读取状态数据\r\n        const { categorys, subCategorys, parentId, parentName, loading, isAddModalVisible, isUpdateModalVisible } = this.state\r\n        const category = this.category || {}\r\n        const title = parentId === '0' ? '一级分类列表' : (\r\n            <Breadcrumb separator=\">\">\r\n                <Breadcrumb.Item onClick={this.showCategorys}>一级分类列表</Breadcrumb.Item>\r\n                <Breadcrumb.Item>{parentName}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n        )\r\n        const extra = (\r\n            <Button icon={<PlusOutlined />} type='primary' onClick={this.showAdd}>\r\n                添加\r\n            </Button>\r\n        )\r\n      \r\n        const columns = [\r\n            {\r\n                title: '分类的名称',\r\n                dataIndex: 'name',\r\n            },\r\n            {\r\n                title: '操作',\r\n                width: 300,\r\n                render: (category) => (\r\n                    <span>\r\n                        <LinkButton onClick={() => this.showUpdate(category)}>修改分类</LinkButton>\r\n                        {this.state.parentId === '0' ? <LinkButton onClick={() => { this.showSubCategorys(category) }}>查看子分类</LinkButton> : null}\r\n\r\n                    </span>\r\n                )\r\n            },\r\n\r\n        ];\r\n        return (\r\n            <>\r\n                <Card title={title} extra={extra}>\r\n                    <Table\r\n                        bordered\r\n                        rowKey='_id'\r\n                        dataSource={parentId === '0' ? categorys : subCategorys}\r\n                        columns={columns}\r\n                        pagination={{ defaultPageSize: 5, showQuickJumper: true }}\r\n                        loading={loading} />\r\n\r\n\r\n                    <Modal title=\"添加分类\" visible={isAddModalVisible} onOk={this.addCategory} onCancel={this.handleCancel}>\r\n                        <AddForm></AddForm>\r\n                    </Modal>\r\n\r\n                    <Modal title=\"更新分类\" visible={isUpdateModalVisible} onOk={this.updateCategory} onCancel={this.handleCancel}>\r\n                        <UpdateForm \r\n                            categoryName={category.name} \r\n                            setForm = {(form) => {this.form = form}}>\r\n                        </UpdateForm>\r\n                    </Modal>\r\n\r\n                </Card>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n","F:\\React\\admin-client\\src\\config\\menuConfig.js",[],"F:\\React\\admin-client\\src\\pages\\Home\\home.jsx",[],"F:\\React\\admin-client\\src\\pages\\Charts\\bar.jsx",[],["161","162"],"F:\\React\\admin-client\\src\\components\\link-button\\index.jsx",["163"],"import React, { Component } from 'react'\r\nimport './index.less'\r\n\r\nexport default function LinkButton(props) {\r\n    return <button {...props} className=\"link-button\"></button>\r\n}\r\n","F:\\React\\admin-client\\src\\pages\\Category\\add-form.jsx",[],"F:\\React\\admin-client\\src\\pages\\Category\\update-form.jsx",[],"F:\\React\\admin-client\\src\\pages\\Product\\home.jsx",[],"F:\\React\\admin-client\\src\\pages\\Product\\add-update.jsx",["164","165"],"import React, { Component } from 'react'\r\nimport {\r\n    Card,\r\n    Form,\r\n    Input,\r\n    Cascader,\r\n    Upload,\r\n    Button,\r\n    message\r\n\r\n} from 'antd'\r\nimport PicturesWall from './pictures-wall'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport LinkButton from '../../components/link-button'\r\nimport { reqCategorys, reqAddOrUpdateProduct } from '../../api'\r\n// import RichTextEditor from './rich-text-editor'\r\nconst { Item } = Form\r\nconst { TextArea } = Input\r\n\r\n/**\r\n * 添加和更新子路由组件\r\n */\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        span: 3,\r\n    },\r\n    wrapperCol: {\r\n        span: 14,\r\n    },\r\n};\r\n\r\nexport default class ProductAddUpdate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef()\r\n        this.pw = React.createRef()\r\n        this.editor = React.createRef()\r\n        this.state = {\r\n            options: [],\r\n        }\r\n    }\r\n\r\n    initOptions = async (categorys) => {\r\n        //categorys 是一个数组，生成一个新数组\r\n        const options = categorys.map(c => ({\r\n            value: c._id,\r\n            label: c.name,\r\n            isLeaf: false,\r\n        }))\r\n        const { isUpdate, product } = this\r\n        const { pCategoryId } = product\r\n        if (isUpdate && pCategoryId !== '0') {\r\n            const subCategorys = await this.getCategorys(pCategoryId)\r\n            const childOptions = subCategorys.map(c => ({\r\n                value: c._id,\r\n                label: c.name,\r\n                isLeaf: true\r\n            }))\r\n            const targetOption = options.find(option => option.value === pCategoryId)\r\n            targetOption.children = childOptions\r\n        }\r\n        this.setState({\r\n            options\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 获取一级、二级分类列表\r\n     */\r\n    getCategorys = async (parentId) => {\r\n        const result = await reqCategorys(parentId)\r\n        if (result.status === 0) {\r\n            const categorys = result.data\r\n            //如果是一级分类\r\n            if (parentId === '0') {\r\n                this.initOptions(categorys)\r\n            } else { //获取二级分类列表\r\n                return categorys //返回二级列表 \r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 用于加载下一级列表的回调函数\r\n     */\r\n    loadData = async selectedOptions => {\r\n        const targetOption = selectedOptions[0]\r\n        targetOption.loading = true\r\n        //根据选中的分类，请求下一级分类列表\r\n        const subCategorys = await this.getCategorys(targetOption.value)\r\n        targetOption.loading = false\r\n        if (subCategorys && subCategorys.length > 0) {\r\n            const childOptions = subCategorys.map(c => ({\r\n                value: c._id,\r\n                label: c.name,\r\n                isLeaf: true\r\n            }))\r\n            targetOption.children = childOptions\r\n        } else {\r\n            targetOption.isLeaf = true\r\n        }\r\n\r\n        this.setState({\r\n            options: [...this.state.options]\r\n        })\r\n\r\n    }\r\n    /**\r\n     * 自定义校验价格是否为数字\r\n     */\r\n    validatePrice = (_, value) => {\r\n        if (value * 1 > 0) {\r\n            return Promise.resolve()\r\n        }\r\n        return Promise.reject('价格必须是数字且大于0')\r\n\r\n    }\r\n    /**\r\n     * 提交表单发起验证\r\n     */\r\n    submit = () => {\r\n        //进行表单验证，如果通过了，发送请求\r\n        this.formRef.current.validateFields().then(async values => {\r\n            const { name, desc, price, categoryIds } = values\r\n            // console.log(categoryIds)\r\n            let pCategoryId, categoryId\r\n            if (categoryIds.length === 1) {\r\n                pCategoryId = '0'\r\n                categoryId = categoryIds[0]\r\n            } else {\r\n                categoryId = categoryIds[0]\r\n                categoryId = categoryIds[1]\r\n            }\r\n            const imgs = this.pw.current.getImgs()\r\n            const detail = this.editor.current.getDetail()\r\n            const product = { name, desc, price, imgs, detail, pCategoryId, categoryId }\r\n            //如果是更新要添加_id\r\n            if (this.isUpdate) {\r\n                product._id = this.product._id\r\n            }\r\n            const result = await reqAddOrUpdateProduct(product)\r\n            if (result.status === 0) {\r\n                message.success(`${this.isUpdate ? '更新' : '添加'}成功`)\r\n                this.props.history.goBack()\r\n            } else {\r\n                message.error(`${this.isUpdate ? '更新' : '添加'}失败`)\r\n            }\r\n        })\r\n    }\r\n    onChange = e => {\r\n        console.log(e);\r\n    }\r\n    /**\r\n     * 获取表单所有信息\r\n     */\r\n    componentDidMount() {\r\n        this.getCategorys('0')\r\n        // console.log(this.formRef.current.getFieldsValue())\r\n    }\r\n    componentWillMount() {\r\n        const product = this.props.location.state\r\n        //保存是否是更新的标识\r\n        this.isUpdate = !!product\r\n        //保存商品（如果没有，保存的是{}）\r\n        this.product = product || {}\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isUpdate, product } = this\r\n        const { pCategoryId, categoryId, imgs, detail } = product\r\n        // console.log('1111111', product)\r\n        const categoryIds = []\r\n        if (isUpdate) {\r\n            if (pCategoryId === '0') {\r\n                categoryIds.push(categoryId)\r\n            } else {\r\n                categoryIds.push(pCategoryId)\r\n                categoryIds.push(categoryId)\r\n            }\r\n        }\r\n        const title = (\r\n            <span>\r\n                <LinkButton onClick={() => { this.props.history.go(-1) }}>\r\n                    <ArrowLeftOutlined style={{ marginRight: 10, fontSize: 20 }} />\r\n                </LinkButton>\r\n                <span>{isUpdate ? '修改商品' : '添加商品'}</span>\r\n            </span>\r\n        )\r\n        return (\r\n            <Card title={title}>\r\n                <Form   {...formItemLayout} ref={this.formRef}>\r\n                    <Item label=\"商品名称\"\r\n                        name=\"name\"\r\n                        rules={[{ required: true, message: '必须输入商品名称' }]}\r\n                        initialValue={this.product.name}>\r\n                        <Input placeholder=\"请输入商品名称\" />\r\n                    </Item>\r\n                    <Item label=\"商品描述\"\r\n                        name=\"desc\"\r\n                        rules={[{ required: true, message: '必须输入商品描述' }]}\r\n                        initialValue={this.product.desc}>\r\n                        <TextArea\r\n                            onChange={this.onChange}\r\n                            placeholder=\"请输入商品描述信息\"\r\n                            autoSize={{ minRows: 3, maxRows: 5 }} />\r\n                    </Item>\r\n                    <Item label=\"商品价格\"\r\n                        name=\"price\"\r\n                        rules={[\r\n                            { required: true, message: '必须输入商品价格' },\r\n                            { validator: this.validatePrice }\r\n                        ]}\r\n                        initialValue={this.product.price}>\r\n                        <Input prefix=\"￥\" suffix=\"RMB\" placeholder=\"请输入商品价格\" />\r\n                    </Item>\r\n                    <Item label=\"商品分类\"\r\n                        name=\"categoryIds\"\r\n                        rules={[{ required: true }]}\r\n                        initialValue={categoryIds}>\r\n                        <Cascader\r\n                            options={this.state.options}\r\n                            loadData={this.loadData}\r\n                        />\r\n                    </Item>\r\n                    <Item label=\"商品图片\"\r\n                        name=\"img\"\r\n                    // rules={[{ required: true, message: '必须上传商品图片' }]}\r\n                    >\r\n                        <PicturesWall ref={this.pw} imgs={imgs} />\r\n                    </Item>\r\n                    <Item label=\"商品详情\"\r\n                        name=\"description\"\r\n                        labelCol={{ span: 2 }} wrapperCol={{ span: 20 }}>\r\n                        {/* <RichTextEditor ref={this.editor} detail={detail} /> */}\r\n                    </Item>\r\n                    <Item>\r\n                        <Button type=\"primary\" onClick={this.submit}>提交</Button>\r\n                    </Item>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","F:\\React\\admin-client\\src\\pages\\Product\\product.jsx",[],"F:\\React\\admin-client\\src\\pages\\Product\\detail.jsx",["166","167","168","169","170","171"],"import React, { Component } from 'react'\r\nimport {\r\n    Card,\r\n    List,\r\n\r\n} from 'antd'\r\nimport LinkButton from '../../components/link-button'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport { reqCategory } from '../../api'\r\nimport {BASE_IMG_URL} from '../../utils/constant'\r\nconst Item = List.Item\r\n\r\n\r\n \r\n/**\r\n * 详情页\r\n */\r\nexport default class ProductDetail extends Component {\r\n    state = {\r\n        cName1: '', //一级标题\r\n        cName2: ''  //二级标题\r\n    }\r\n    // async componentDidMount () {\r\n    //     const {pCategoryId, categoryId } = this.props.location.state\r\n    //     if(pCategoryId === '0') { //一级分类下的商品\r\n    //         const result = await reqCategory(categoryId)\r\n    //         const cName1 = result.data.name \r\n    //         this.setState({cName1})\r\n    //     } else { //二级分类下的商品\r\n    //通过await 方式发送 效率低下  \r\n    //         const result1 = await reqCategory(pCategoryId)\r\n    //         const result2 = await reqCategory(categoryId)\r\n    //         console.log(result1.data)\r\n    //         const cName1 = result1.data.name \r\n    //         const cName2 = result2.data.name \r\n    //用promise.all的方式发送  得到的results是个数组  一次性发送多个请求，只有都成功了，才正常处理\r\n    //  const results = await Promise.all([eqCategory(pCategoryId),reqCategory(categoryId)])\r\n    //  const cName1 = results[0].data.name \r\n    //  const cName2 = results[1].data.name\r\n    //         this.setState({\r\n    //             cName1,\r\n    //             cName2\r\n    //         })\r\n    //     }\r\n    // }\r\n    render() {\r\n        const { name, desc, price, detail,imgs,_id} = this.props.location.state\r\n        const {cName1, cName2} = this.state\r\n        console.log(this.props.location.state)\r\n        const title = (\r\n            <span>\r\n                <LinkButton onClick = {() => {this.props.history.go(-1)}}>\r\n                    <ArrowLeftOutlined style={{ marginRight: 10, fontSize:20 }}/>\r\n                </LinkButton>\r\n                <span>商品详情</span>\r\n            </span>\r\n        )\r\n        return (\r\n           <Card title={title} className='product-detail'>\r\n               <List>\r\n                   <Item>\r\n                        <div className=\"left\">商品名称 : \r\n                            <span className=\"right\">{name}</span>\r\n                        </div>\r\n                       {/* <span className=\"right\">联想ThinkPad .....</span> */}\r\n                   </Item>\r\n                   <Item>\r\n                        <div className=\"left\">商品描述：\r\n                            <span className=\"right\">{desc}</span>\r\n                        </div>\r\n                        \r\n                   </Item>\r\n                   <Item>\r\n                        <div className=\"left\">商品价格：\r\n                            <span className=\"right\">{price}元</span>\r\n                        </div>\r\n                   </Item>\r\n                   <Item>\r\n                        <div className=\"left\">所属分类：\r\n                            {/* <span className=\"right\">{cName1}{cName2 ? '-->' + cName2: ''}</span> */}\r\n                            <span>aaaaa --  bbbb</span>\r\n                        </div>\r\n                   </Item>\r\n                   <Item>\r\n                        <div className=\"left\">商品图片：\r\n                            {/* {\r\n                                imgs.map(item => {\r\n                                    return <img src={item} key={_id}></img>\r\n                                })\r\n                            } */}\r\n                            {/* <img src={img1} alt=\"\"/> */}\r\n                        </div>\r\n                   </Item>\r\n                   <Item>\r\n                        <div className=\"left\">商品详情: \r\n                            <span className=\"right\" dangerouslySetInnerHTML={{__html: detail}}></span>\r\n                        </div>\r\n                   </Item>\r\n               </List>\r\n           </Card>\r\n        )\r\n    }\r\n}\r\n","F:\\React\\admin-client\\src\\utils\\constant.js",[],"F:\\React\\admin-client\\src\\pages\\Charts\\line.jsx",[],"F:\\React\\admin-client\\src\\pages\\User\\user.jsx",[],"F:\\React\\admin-client\\src\\pages\\Product\\pictures-wall.jsx",["172"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Upload,Modal,message } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport { reqDeleteImg } from '../../api'\r\nimport {BASE_IMG_URL} from '../../utils/constant'\r\n\r\n\r\n\r\nexport default class PicturesWall extends Component {\r\n    static propTypes = {\r\n        imgs: PropTypes.array\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n        let fileList = []\r\n        const {imgs} = this.props\r\n        // console.log('.....', imgs)\r\n        if(imgs && imgs.length > 0) {\r\n            fileList = imgs.map((img, index) => ({\r\n                uid: -index,\r\n                name: img,\r\n                status: \"done\",\r\n                url: BASE_IMG_URL + img\r\n            }))\r\n        }\r\n        this.state = { \r\n            previewVisible: false,  //标识是否显示大图预览\r\n            previewImage: '', //显示大图\r\n            fileList \r\n        }\r\n    }\r\n\r\n    getImgs = () => {\r\n        return this.state.fileList.map(file => file.name)\r\n    }\r\n    /**\r\n     * 隐藏Modal\r\n     */\r\n    handleCancel = () => this.setState({previewVisible: false})\r\n    \r\n    handlePreview = file => {\r\n        this.setState({\r\n            previewImage:file.url || file.thumbUrl,\r\n            previewVisible: true,\r\n        })\r\n    }\r\n    /**\r\n     * file当前操作的图片文件（上传/删除）\r\n     *  fileList: 所有已上传图片文件对象的数组\r\n     */\r\n    handeleChange = async ({ file, fileList }) => {\r\n        // console.log('handleChange()', file, fileList)\r\n        if(file.status == 'done') {\r\n            const result = file.response  //{status: 0, data:{name: 'xxx.jpg', url:'图片地址'}}\r\n            if(result.status === 0) {\r\n                message.success('上传图片成功')\r\n                const {name, url} = result.data\r\n                file = fileList[fileList.length - 1]\r\n                file.name = name\r\n                file.url = url\r\n            } else {\r\n                message.error('上传图片失败')\r\n            }\r\n        } else if(file.status === 'removed') {\r\n            //删除图片\r\n            const result = await reqDeleteImg(file.name)\r\n            if( result.status === 0) {\r\n                message.success('删除图片成功')\r\n            } else {\r\n                message.error('删除图片失败')\r\n            }\r\n           \r\n        }\r\n        this.setState({ fileList })\r\n    };\r\n\r\n    render() {\r\n        const { previewVisible, previewImage, fileList } = this.state;\r\n        const uploadButton = (\r\n            <div>\r\n                <PlusOutlined />\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n        return (\r\n            <div>\r\n                <Upload\r\n                    action=\"/manage/img/upload\" //上传图片的接口\r\n                    accept='image'\r\n                    listType=\"picture-card\"\r\n                    fileList={fileList} //所有已上传图片文件对象的数组\r\n                    name='image' \r\n                    onChange={this.handeleChange}\r\n                    onPreview={this.handlePreview}>\r\n                    {fileList.length >=3 ? null : uploadButton}\r\n                </Upload>\r\n                <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n                    <img src={previewImage} style={{ width: '100%'}} alt=\"\"/>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","F:\\React\\admin-client\\src\\pages\\Charts\\pie.jsx",[],"F:\\React\\admin-client\\src\\pages\\Product\\rich-text-editor.jsx",[],"F:\\React\\admin-client\\src\\pages\\Role\\role.jsx",[],"F:\\React\\admin-client\\src\\pages\\Role\\add-form.jsx",[],"F:\\React\\admin-client\\src\\pages\\Role\\auth-form.jsx",[],"F:\\React\\admin-client\\src\\utils\\dateUtils.js",[],"F:\\React\\admin-client\\src\\pages\\User\\user-form.jsx",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"173","replacedBy":"177"},{"ruleId":"175","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":115,"column":36,"nodeType":"181","endLine":115,"endColumn":47},{"ruleId":"173","replacedBy":"182"},{"ruleId":"175","replacedBy":"183"},{"ruleId":"173","replacedBy":"184"},{"ruleId":"175","replacedBy":"185"},{"ruleId":"173","replacedBy":"186"},{"ruleId":"175","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":1,"column":1,"nodeType":"190","endLine":3,"endColumn":2},{"ruleId":"188","severity":1,"message":"189","line":4,"column":1,"nodeType":"190","endLine":28,"endColumn":2},{"ruleId":"173","replacedBy":"191"},{"ruleId":"175","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":12,"column":24,"nodeType":"195","messageId":"196","endLine":12,"endColumn":38},{"ruleId":"173","replacedBy":"197"},{"ruleId":"175","replacedBy":"198"},{"ruleId":"193","severity":1,"message":"199","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":26},{"ruleId":"193","severity":1,"message":"200","line":7,"column":5,"nodeType":"195","messageId":"196","endLine":7,"endColumn":11},{"ruleId":"193","severity":1,"message":"201","line":170,"column":48,"nodeType":"195","messageId":"196","endLine":170,"endColumn":54},{"ruleId":"193","severity":1,"message":"202","line":9,"column":10,"nodeType":"195","messageId":"196","endLine":9,"endColumn":21},{"ruleId":"193","severity":1,"message":"203","line":10,"column":9,"nodeType":"195","messageId":"196","endLine":10,"endColumn":21},{"ruleId":"193","severity":1,"message":"204","line":47,"column":43,"nodeType":"195","messageId":"196","endLine":47,"endColumn":47},{"ruleId":"193","severity":1,"message":"205","line":47,"column":48,"nodeType":"195","messageId":"196","endLine":47,"endColumn":51},{"ruleId":"193","severity":1,"message":"206","line":48,"column":16,"nodeType":"195","messageId":"196","endLine":48,"endColumn":22},{"ruleId":"193","severity":1,"message":"207","line":48,"column":24,"nodeType":"195","messageId":"196","endLine":48,"endColumn":30},{"ruleId":"208","severity":1,"message":"209","line":54,"column":24,"nodeType":"210","messageId":"211","endLine":54,"endColumn":26},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],["212"],["213"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["212"],["213"],["212"],["213"],["212"],["213"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["212"],["213"],"no-unused-vars","'reqAddCategory' is defined but never used.","Identifier","unusedVar",["212"],["213"],"'Component' is defined but never used.","'Upload' is defined but never used.","'detail' is assigned a value but never used.","'reqCategory' is defined but never used.","'BASE_IMG_URL' is defined but never used.","'imgs' is assigned a value but never used.","'_id' is assigned a value but never used.","'cName1' is assigned a value but never used.","'cName2' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]